{
    "appPort": ["required", "positive_integer"],
    "appTestPort": ["required", "positive_integer"],
    "projectName": ["required", "string"],
    "appMode": ["required", "string"],
    "mainUrl": ["required", "string"],
    "db": [
        "required",
        {
            "nested_object": {
                "username": ["required", "string"],
                "password": ["required", "string"],
                "database": ["required", "string"],
                "dialect": ["required", "string"],
                "host": ["required", "string"],
                "port": ["required", "positive_integer"]
            }
        }
    ],
    "test-db": [
        "required",
        {
            "nested_object": {
                "username": ["required", "string"],
                "password": ["required", "string"],
                "database": ["required", "string"],
                "dialect": ["required", "string"],
                "host": ["required", "string"],
                "port": ["required", "positive_integer"]
            }
        }
    ],
    "rabbitmq": [
        "required",
        {
            "nested_object": {
                "urls": ["required", { "list_of": "string" }]
            }
        }
    ],
    "logger": [
        "required",
        {
            "nested_object": {
                "isPlainText": ["required", "boolean"],
                "level": ["required", "string"],
                "pretty": "boolean",
                "transports": [
                    "required",
                    {
                        "list_of": {
                            "nested_object": {
                                "type": ["required", "string"],
                                "level": "string",
                                "pretty": "boolean"
                            }
                        }
                    }
                ]
            }
        }
    ],
    "intervals": [
        "required",
        {
            "nested_object": {
                "marketsRefresher": ["required", "positive_integer"]
            }
        }
    ],
    "amqpWorker": [
        "required",
        {
            "nested_object": {
                "retryLimit": ["required", "positive_integer"],
                "retryPeriodMs": ["required", "positive_integer"]
            }
        }
    ],
    "aggregateOHLCVEmitter": [
        "required",
        {
            "nested_object": {
                "interval": ["required", "positive_integer"],
                "exchanges": ["required", { "list_of": "string" }],
                "pairs": ["required", { "list_of": "string" }]
            }
        }
    ]
}
