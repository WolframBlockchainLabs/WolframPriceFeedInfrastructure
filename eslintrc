{
  "extends": ["webbylab", "plugin:prettier/recommended"],
  "plugins": ["prettier"],
  "env": {
    "browser": true,
    "commonjs": true,
    "es6": true,
    "node": true
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [".js", ".jsx", ".json"]
      },
      "alias": {
        "map": [
          ["@assets", "./src/assets"],
          ["@components", "./src/components"],
          ["@pages", "./src/pages"],
          ["@store", "./src/store"],
          ["@features", "./src/features"],
          ["@config", "./src/config"],
          ["@lib", "./src/lib"],
          ["@hooks", "./src/hooks"],
          ["@services", "./src/services"],
          ["@constants", "./src/constants"],
          ["@theme", "./src/theme"],
          ["@workerClient", "./src/workerClient"]
        ]
      }
    },
    "react": {
      "version": "detect"
    }
  },
  "rules": {
    // Turn off deprecated rules
    "newline-before-return": "off",
    "newline-after-var": "off",
    "no-param-reassign": 0,
  
    // Turn off import react in every jsx file since it imported automatically
    "react/react-in-jsx-scope": "off",

    "padding-line-between-statements": [
      "error",
      // Modern replacement for newline-before-return
      { "blankLine": "always", "prev": "*", "next": "return" },
      // Modern replacement for newline-after-var
      { "blankLine": "always", "prev": ["const", "let", "var"], "next": "*" },
      { "blankLine": "any", "prev": ["const", "let", "var"], "next": ["const", "let", "var"] }
    ],

    // Limit maximum amount of consequent empty lines
    "no-multiple-empty-lines": ["error", { "max": 1 }],

    // Limit maximum amount of consequent spaces
    "no-multi-spaces": ["error"],

    // Keep only useful console.warn and console.error
    "no-console": ["warn", { "allow": ["warn", "error"] }],

    // Disabled due to DTO converters
    "more/no-duplicated-chains": 0,
    "camelcase": "off",

    // Disable due to inconsistent behavior
    "more/no-hardcoded-configuration-data": "off",
    "more/no-hardcoded-password": "off",

    // Force to specify displayName for better profiling experience
    "react/display-name": ["error"],

    // Keep consistent naming for default exports
    "no-restricted-syntax": [
      "error",
      {
        "selector": "ImportDeclaration[source.value='classnames'][specifiers.0.local.name != 'cx']",
        "message": "Use 'cx' as the import name for 'classnames'"
      },
      {
        "selector": "ImportDeclaration[source.value='prop-types'][specifiers.0.local.name != 'PropTypes']",
        "message": "Use 'PropTypes' as the import name for 'prop-types'"
      }
    ],

    // Force to use prettier formatting
    "prettier/prettier": ["error"]
  }
}
