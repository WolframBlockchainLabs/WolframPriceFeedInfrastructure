version: '3.9'

services:
    backend:
        build:
            context: ../
            dockerfile: ./docker/config/backend/Dockerfile
            args:
                PORT: 8000
        container_name: ccdb-backend
        ports: ['8000:8000']
        image: ${BE_REGISTRY_ADDRESS}:${BE_TAG}
        depends_on:
            timescale:
                condition: service_healthy
        environment:
            MODE: application
        command: sh -c "npm run nodemon"
        volumes:
            - ../:/app

    collectors:
        image: ${BE_REGISTRY_ADDRESS}:${BE_TAG}
        container_name: ccdb-collectors
        depends_on:
            timescale:
                condition: service_healthy
        command: sh -c "npm run collector:run"

    timescale:
        image: timescale/timescaledb:latest-pg15
        container_name: ccdb-timescale
        restart: always
        ports: ['5432:5432']
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready -d ccdb -U postgres" ]
            interval: 10s
            timeout: 5s
            retries: 5
        environment:
            POSTGRES_DB: ccdb
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: password
        command: postgres -c 'max_connections=500'
        volumes:
            - ~/docker-volumes/ccdb/database:/var/lib/postgresql/data

    timescale-test:
        image: timescale/timescaledb:latest-pg15
        container_name: ccdb-timescale-test
        restart: always
        ports: ['5431:5432']
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready -d ccdb_test -U postgres" ]
            interval: 10s
            timeout: 5s
            retries: 5
        environment:
            POSTGRES_DB: ccdb_test
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: password
        volumes:
            - ~/docker-volumes/ccdb/timescale-test:/var/lib/postgresql/data
