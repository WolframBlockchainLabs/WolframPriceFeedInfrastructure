version: '3.3'

services:
    be:
        build: 
            context: ./../
            dockerfile: Dockerfile
        container_name: ccdb
        ports: [ '8000:8000', '3002:3002' ]
        depends_on: ['db', 'test-db']
        volumes:
          - ./../:/app
          # - ~/docker-volumes/skeleton/be/node_modules:/app/node_modules
        environment:
            TZ: Europe/Kiev
            MODE: application
        command: sh -c "npm i && rm -rf node_modules/multer/node_modules/busboy && npm run migration:db && npm run migration:test && npm run nodemon"
    db:
        image: timescale/timescaledb:latest-pg15
        command: --default-authentication-plugin=pg_native_password --skip-log-bin --disable-log-bin
        restart: always
        ports: ['3306:3306']
        environment:
            POSTGRES_DB: ccdb
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: password
            MYSQL_ROOT_PASSWORD: strong-password
        container_name: ccdb-db
        volumes:
          - ~/docker-volumes/ccdb/db:/var/lib/

        image: mysql:8.0.25
        command: --default-authentication-plugin=mysql_native_password --skip-log-bin --disable-log-bin
        restart: always
        ports: ['3307:3306']
        environment:
            MYSQL_DATABASE: skeleton_test
            MYSQL_USER: skeleton
            MYSQL_PASSWORD: password
            MYSQL_ROOT_PASSWORD: password
            TZ: Europe/Kiev
            LC_ALL: en_US.UTF-8
            LANG: en_US.UTF-8
        container_name: skeleton-test-db
        volumes:
          - ~/docker-volumes/skeleton/test-db:/var/lib/mysql
    prometheus:
        image: prom/prometheus:v2.28.1
        container_name: skeleton-prometheus
        volumes:
            - ./prometheus:/etc/prometheus
            - ~/docker-volumes/skeleton/prometheus:/prometheus
        ports:
            - 9090:9090
    grafana:
        image: grafana/grafana:8.0.6
        container_name: skeleton-grafana
        volumes:
            - ./grafana/provisioning:/etc/grafana/provisioning
            - ./grafana/config.ini:/etc/grafana/config.ini
            - ./grafana/dashboards:/var/lib/grafana/dashboards
            - ~/docker-volumes/skeleton/grafana:/var/lib/grafana
        environment:
            - GF_AUTH_DISABLE_LOGIN_FORM=true
            - GF_AUTH_ANONYMOUS_ENABLED=true
            - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
        ports:
            - 3001:3000


        image: tianon/exim4
        restart: always
