version: '3.3'

services:
    app:
        build: 
            context: ./../
            dockerfile: Dockerfile
        container_name: ccdb
        ports: [ '8000:8000' ]
        #image: gitlab-ee.webbylab.com:5050/ccdb/exchange-analyzer/backend
        depends_on: ['db']
        volumes:
          - ./../:/app
        environment:
            MODE: application
        command: sh -c "npm run nodemon"
    collectors: 
        build: 
           context: ./../
           dockerfile: Dockerfile
        container_name: ccdb-collectors
        depends_on: ['db']
        #volumes maybe need for prometeus
        command: sh -c "npx pm2 start ./ccxt-collector.config.cjs"

    db:
        image: timescale/timescaledb:latest-pg15
        container_name: ccdb-db
        restart: always
        ports: ['5432:5432']
        environment:
            POSTGRES_DB: ccdb
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: password
        command: postgres -c 'max_connections=500'
        volumes:
            - ~/docker-volumes/ccdb/data/db:/var/lib/postgresql/data

    test-db:
        image: timescale/timescaledb:latest-pg15
        container_name: ccdb-test-db
        restart: always
        ports: ['5431:5432']
        environment:
            POSTGRES_DB: ccdb_test
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: password
        volumes:
            - ~/docker-volumes/ccdb/data/test-db:/var/lib/postgresql/data
    prometheus:
        image: prom/prometheus:v2.28.1
        container_name: ccdb-prometheus
        user: root
        volumes:
            - ./prometheus:/etc/prometheus
            - ~/docker-volumes/ccdb/prometheus:/prometheus
        ports:
            - 9090:9090
    grafana:
        image: grafana/grafana:8.0.6
        container_name: ccdb-grafana
        user: root
        volumes:
            - ./grafana/provisioning:/etc/grafana/provisioning
            - ./grafana/config.ini:/etc/grafana/config.ini
            - ./grafana/dashboards:/var/lib/grafana/dashboards
            - ~/docker-volumes/ccdb/grafana:/var/lib/grafana
        environment:
            - GF_AUTH_DISABLE_LOGIN_FORM=true
            - GF_AUTH_ANONYMOUS_ENABLED=true
            - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
        ports:
            - 3001:3000
